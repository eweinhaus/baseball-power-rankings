name: Deploy to AWS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: baseball-power-rankings

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Deploy CloudFormation stack
      run: |
        # Generate a random password for the database
        DB_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)
        aws cloudformation deploy \
          --template-file cloudformation-template.yaml \
          --stack-name baseball-power-rankings-stack \
          --parameter-overrides Environment=production DatabasePassword=$DB_PASSWORD \
          --capabilities CAPABILITY_NAMED_IAM \
          --region ${{ env.AWS_REGION }}

    - name: Update ECS service
      run: |
        aws ecs update-service \
          --cluster production-baseball-power-rankings-cluster \
          --service production-baseball-power-rankings-service \
          --force-new-deployment \
          --region ${{ env.AWS_REGION }}

    - name: Wait for deployment to complete
      run: |
        aws ecs wait services-stable \
          --cluster production-baseball-power-rankings-cluster \
          --services production-baseball-power-rankings-service \
          --region ${{ env.AWS_REGION }}

    - name: Get load balancer URL
      id: get-url
      run: |
        ALB_DNS=$(aws cloudformation describe-stacks \
          --stack-name baseball-power-rankings-stack \
          --query 'Stacks[0].Outputs[?OutputKey==`LoadBalancerDNS`].OutputValue' \
          --output text \
          --region ${{ env.AWS_REGION }})
        echo "url=http://$ALB_DNS" >> $GITHUB_OUTPUT

    - name: Deploy to production
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deployment completed successfully!"
        echo "Application URL: ${{ steps.get-url.outputs.url }}" 